[gd_scene load_steps=5 format=2]

[ext_resource path="res://art/Tree_glb.glb" type="PackedScene" id=1]
[ext_resource path="res://art/Tree.fbx" type="PackedScene" id=2]

[sub_resource type="GDScript" id=3]
script/source = "extends KinematicBody

var point = Vector3.ZERO
var direction = Vector3.ZERO
var speed = 5


func initialize(start_position):
	translation = start_position
	point = start_position
	
func move(steps):
	point.z += steps

func _process(delta: float) -> void:
	if point.distance_to(transform.origin) > 0.05:
		direction = point - transform.origin
		direction = direction.normalized() * speed
	else:
		direction = point - transform.origin
	move_and_slide(direction)

func _on_VisibilityNotifier_screen_exited() -> void:
	queue_free()



"

[sub_resource type="BoxShape" id=2]
margin = 0.001

[node name="Background" type="KinematicBody" groups=[
"BCK",
]]
script = SubResource( 3 )

[node name="Pivot" type="Spatial" parent="."]

[node name="Tree" parent="Pivot" instance=ExtResource( 2 )]
visible = false

[node name="Tree_glb" parent="Pivot" instance=ExtResource( 1 )]

[node name="CollisionShape" type="CollisionShape" parent="."]
shape = SubResource( 2 )
disabled = true

[node name="VisibilityNotifier" type="VisibilityNotifier" parent="."]

[connection signal="screen_exited" from="VisibilityNotifier" to="." method="_on_VisibilityNotifier_screen_exited"]
